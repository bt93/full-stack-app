{"version":3,"sources":["img/loading.gif","components/Header.js","config.js","components/Courses.js","components/CourseDetail.js","components/Form.js","components/UserSignIn.js","components/UserSignUp.js","components/UserSignOut.js","components/CreateCourse.js","components/UpdateCourse.js","components/NotFound.js","components/Error.js","components/Forbidden.js","Data.js","Context.js","PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","context","this","props","authUser","JSON","parse","authenticatedUser","className","Fragment","user","firstName","lastName","to","React","PureComponent","Courses","state","data","isLoading","fetch","config","then","res","json","setState","prevState","status","courses","history","push","catch","err","console","error","renderedData","src","loading","alt","length","map","course","key","id","title","version","xmlns","x","y","viewBox","points","Component","CourseDetail","match","params","errors","message","emailAddress","password","window","confirm","deleteCourse","buttons","onClick","description","estimatedTime","materialsNeeded","split","mat","i","cancel","submit","submitButtonText","elements","onSubmit","event","preventDefault","type","ErrorsDisplay","errorsDisplay","UserSignIn","change","bind","target","value","name","from","location","pathname","actions","signIn","log","Form","placeholder","onChange","UserSignUp","confirmPassword","createUser","alert","UserSignOut","signOut","CreateCourse","newCourse","createCourse","UpdateCourse","courseId","updatedCourse","updateCourse","Data","path","method","body","requiresAuth","credentials","url","options","headers","stringify","encodedCredentials","btoa","api","response","Error","Context","createContext","Provider","a","getUser","Cookies","set","expires","remove","get","children","Consumer","withContext","component","rest","render","HeaderWithContext","UserSignInWithContext","UserSignUpWithContext","UserSignOutWithContext","CourseDetailWithContext","CreateCourseWithContext","UpdateCourseWithContext","Boolean","hostname","ReactDOM","exact","PrivateRoute","Forbidden","NotFound","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7e365826.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.26ef8bb4.gif\";","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Header extends React.PureComponent {\r\n    render() {\r\n        const { context } = this.props;\r\n        const authUser = JSON.parse(context.authenticatedUser);\r\n        \r\n        return (\r\n            <div className=\"header\">\r\n                <div className=\"bounds\">\r\n                    <h1 className=\"header--logo\">Courses</h1>\r\n                    <nav>\r\n                        {authUser ?\r\n                            <React.Fragment>\r\n                                <span>Welcome, {authUser.user.user.firstName} {authUser.user.user.lastName}!</span>\r\n                                <Link to=\"/signout\">Sign Out</Link>\r\n                            </React.Fragment>\r\n                            :\r\n                            <React.Fragment>\r\n                            <Link className=\"signup\" to=\"/signup\">Sign Up</Link>\r\n                            <Link className=\"signin\" to=\"/signin\">Sign In</Link>\r\n                            </React.Fragment>\r\n                        }\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","// Holds api url for easy manipulation\r\nexport default {\r\n    apiBaseUrl: 'https://treehouse-full-stack-app.herokuapp.com/api',\r\n  };","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport config from '../config';\r\nimport loading from '../img/loading.gif';\r\n\r\nclass Courses extends Component {\r\n    state = {\r\n        data: null,\r\n        isLoading: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${config.apiBaseUrl}/courses`)\r\n            .then(res => res.json())\r\n            .then(res => this.setState(prevState => {\r\n                if (res.status === 500) {\r\n                    this.props.history.push('/error');\r\n                } else {\r\n                    return {\r\n                        data: res.courses,\r\n                        isLoading: false\r\n                    }\r\n                }\r\n        }))\r\n        .catch(err => {\r\n            console.error(err);\r\n            this.props.history.push('/error');\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let renderedData;\r\n\r\n        if (!this.state.isLoading) {\r\n            if (this.state.data.length > 0) {\r\n                renderedData = this.state.data.map(course => {\r\n                    return (\r\n                        <div key={course.id} className=\"grid-33\"><Link className=\"course--module course--link\" to={`/courses/${course.id}`}>\r\n                            <h4 className=\"course--label\">Course</h4>\r\n                            <h3 className=\"course--title\">{course.title}</h3>\r\n                        </Link></div>\r\n                    )\r\n                });\r\n            }\r\n        } else {\r\n            renderedData = <img src={loading} className=\"centered\" alt=\"Loading\" />\r\n        }\r\n\r\n        return (\r\n            <div className=\"bounds\">\r\n                {renderedData}\r\n                <div className=\"grid-33\"><Link className=\"course--module course--add--module\" to=\"/courses/create\">\r\n                    <h3 className=\"course--add--title\"><svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\r\n                        viewBox=\"0 0 13 13\" className=\"add\">\r\n                        <polygon points=\"7,6 7,0 6,0 6,6 0,6 0,7 6,7 6,13 7,13 7,7 13,7 13,6 \"></polygon>\r\n                    </svg>New Course</h3>\r\n                </Link></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Courses;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport config from '../config';\r\nimport loading from '../img/loading.gif';\r\n\r\nclass CourseDetail extends Component {\r\n    state = {\r\n        id: this.props.match.params.id,\r\n        data: null,\r\n        isLoading: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${config.apiBaseUrl}/courses/${this.state.id}`)\r\n            .then(res => res.json())\r\n            .then(res => this.setState(prevState => {\r\n                if (res.course) {\r\n                    return {\r\n                        data: res.course,\r\n                        isLoading: false\r\n                    }\r\n                } else {\r\n                    console.error(res.errors.errors.message);\r\n                    return this.props.history.push('/notfound');\r\n                }\r\n            }))\r\n            .catch(err => {\r\n                console.error(err);\r\n                this.props.history.push('/error');\r\n            });;\r\n    }\r\n\r\n    deleteCourse(id) {\r\n        const { context } = this.props;\r\n        const authUser = JSON.parse(context.authenticatedUser);\r\n        const emailAddress = authUser.user.user.emailAddress;\r\n        const password = authUser.password;\r\n\r\n        if (window.confirm('Are you sure you want to delete this course?')) {\r\n            context.data.deleteCourse(emailAddress, password, id)\r\n                .then(errors => {\r\n                    if (errors.errors) {\r\n                        console.error(errors.errors);\r\n                        this.props.history.push('/error');\r\n                    } else {\r\n                        this.props.history.push('/');\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.error(err);\r\n                    this.props.history.push('/error');\r\n                });\r\n        } \r\n    }\r\n\r\n    render() {\r\n        let renderedData;\r\n        let buttons;\r\n        const { context } = this.props;\r\n        const authUser = JSON.parse(context.authenticatedUser)\r\n\r\n        if (!this.state.isLoading) {\r\n            if (context.authenticatedUser && authUser.user.user.id === this.state.data.user.id) {\r\n                buttons = (\r\n                    <span>\r\n                        <Link className=\"button\" to={`/courses/${this.state.id}/update`}>Update Course</Link>\r\n                        <button className=\"button\" onClick={() => this.deleteCourse(this.state.id)}>Delete Course</button>\r\n                    </span>\r\n                )\r\n            }\r\n\r\n            renderedData = (\r\n                <div className=\"bounds course--detail\">\r\n                    <div className=\"grid-66\">\r\n                        <div className=\"course--header\">\r\n                            <h4 className=\"course--label\">Course</h4>Name\r\n                            <h3 className=\"course--title\">{this.state.data.title}</h3>\r\n                            <p>By: {this.state.data.user.firstName} {this.state.data.user.lastName}</p>\r\n                        </div>\r\n                        <div className=\"course--description\">\r\n                            <p>{this.state.data.description}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"grid-25 grid-right\">\r\n                        <div className=\"course--stats\">\r\n                            <ul className=\"course--stats--list\">\r\n                                <li className=\"course--stats--list--item\">\r\n                                    <h4>Estimated Time</h4>\r\n                                    {this.state.data.estimatedTime ? (\r\n                                        <h3>{this.state.data.estimatedTime}</h3>\r\n                                    ) : (\r\n                                        <h3>Data Unavailable</h3>\r\n                                    )}\r\n                                </li>\r\n                                <li className=\"course--stats--list--item\">\r\n                                    <h4>Materials Needed</h4>\r\n                                    {this.state.data.materialsNeeded ? (\r\n                                        <ul>\r\n                                        {this.state.data.materialsNeeded.split('*').map((mat, i) => {\r\n                                            if (i !== 0) {\r\n                                                return <li key={i}>{mat}</li>\r\n                                            } else {\r\n                                                return null\r\n                                            }\r\n                                        })}\r\n                                        </ul>\r\n                                    ) : (\r\n                                        <h3>Data Unavailable</h3>\r\n                                    )}\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            renderedData = <img src={loading} className=\"centered\" alt=\"Loading\" />\r\n        }\r\n        return (\r\n            <div>\r\n                <div className=\"actions--bar\">\r\n                    <div className=\"bounds\">\r\n                            <div className=\"grid-100\">\r\n                            {buttons}\r\n                            <Link className=\"button button-secondary\" to=\"/\">Return to List</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {renderedData}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CourseDetail;","import React from 'react';\r\n\r\n// Form class used to easily add multiple forms\r\nexport default (props) => {\r\n    const {\r\n        cancel,\r\n        errors,\r\n        submit,\r\n        submitButtonText,\r\n        elements\r\n    } = props;\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        submit();\r\n    }\r\n\r\n    function handleCancel(event) {\r\n        event.preventDefault();\r\n        cancel();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ErrorsDisplay errors={errors} />\r\n            <form onSubmit={handleSubmit}>\r\n                {elements()}\r\n                <div className=\"pad-bottom\">\r\n                    <button className=\"button\" type=\"submit\">{submitButtonText}</button>\r\n                    <button className=\"button button-secondary\" onClick={handleCancel}>Cancel</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ErrorsDisplay = ({ errors }) => {\r\n    let errorsDisplay = null;\r\n\r\n    if (errors) {        \r\n        errorsDisplay = (\r\n            <div>\r\n                <h2 className=\"validation--errors--label\">Validation errors</h2>\r\n                <div className=\"validation-errors\">\r\n                    <ul>\r\n                        {errors.map((error, i) => <li key={i}>{error.message}</li>)}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return errorsDisplay;\r\n}","import React , { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Form from './Form';\r\n\r\nclass UserSignIn extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            emailAddress: '',\r\n            password: '',\r\n            errors: []\r\n        }\r\n        this.change = this.change.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n\r\n    change(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        \r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    submit(event) {\r\n        const { context } = this.props;\r\n        const { from } = this.props.location.state || { from: { pathname: '/' } }\r\n        const { emailAddress, password } = this.state;\r\n\r\n        context.actions.signIn(emailAddress, password)\r\n            .then(user => {\r\n                if (user === null) {\r\n                    this.setState(() => {\r\n                        return { errors: {\r\n                            errors: [{message: 'Sign-in was unsuccessful'}] \r\n                        } };\r\n                    });\r\n                } else {\r\n                    this.props.history.push(from);\r\n                    console.log(`Success! ${emailAddress} is signed in!`);\r\n                }\r\n            }) \r\n            .catch(err => {\r\n                console.error(err);\r\n                this.props.history.push('/error');\r\n            })\r\n    }\r\n\r\n    cancel = () => {\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            emailAddress,\r\n            password,\r\n            errors\r\n        } = this.state;\r\n        \r\n        return(\r\n            <div className=\"bounds\">\r\n                <div className=\"grid-33 centered signin\">\r\n                    <h1>Sign In</h1>\r\n                    <div>\r\n                        <Form\r\n                            cancel={this.cancel}\r\n                            errors={errors.errors}\r\n                            submit={this.submit}\r\n                            submitButtonText=\"Sign In\"\r\n                            elements={() => (\r\n                                <React.Fragment>\r\n                                    <input \r\n                                        id=\"emailAddress\"\r\n                                        name=\"emailAddress\"\r\n                                        type=\"text\"\r\n                                        className=\"\"\r\n                                        placeholder=\"Email Address\"\r\n                                        value={emailAddress}\r\n                                        onChange={this.change}\r\n                                            />\r\n                                    <input \r\n                                        id=\"password\"\r\n                                        name=\"password\"\r\n                                        type=\"password\"\r\n                                        className=\"\"\r\n                                        placeholder=\"Password\"\r\n                                        value={password}\r\n                                        onChange={this.change}\r\n                                            />\r\n                                </React.Fragment>\r\n                            )}\r\n                        />\r\n                    </div>\r\n                    <p>&nbsp;</p>\r\n                    <p>Don't have a user account? <Link to=\"/signup\">Click here</Link> to sign up!</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserSignIn;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Form from './Form';\r\n\r\nexport default class UserSignUp extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            emailAddress: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            errors: []\r\n        }\r\n        this.change = this.change.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n    \r\n    change(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    submit(event) {\r\n        const { context } = this.props;\r\n\r\n        const {\r\n            firstName,\r\n            lastName,\r\n            emailAddress,\r\n            password,\r\n            confirmPassword\r\n        } = this.state\r\n        \r\n        const user = {\r\n            firstName,\r\n            lastName,\r\n            emailAddress,\r\n            password,\r\n            confirmPassword\r\n        }\r\n        \r\n        if (user.password === user.confirmPassword) {\r\n            context.data.createUser(user)\r\n                .then(errors => {\r\n                    if (errors.errors) {\r\n                        console.error(errors);\r\n                        this.setState({ errors });\r\n                    } else {\r\n                        context.actions.signIn(emailAddress, password)\r\n                            .then(() => {\r\n                                this.props.history.push('/');\r\n                            });\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.error(err);\r\n                    this.props.history.push('/error');\r\n                });\r\n        } else {\r\n            alert('\"Confirm Password\" must match \"Password\"');\r\n        }\r\n    }\r\n\r\n    cancel = () => {\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            firstName,\r\n            lastName,\r\n            emailAddress,\r\n            password,\r\n            confirmPassword,\r\n            errors\r\n        } = this.state;\r\n        \r\n        return (\r\n            <div className=\"bounds\">\r\n                <div className=\"grid-33 centered signin\">\r\n                    <h1>Sign Up</h1>\r\n                    <Form\r\n                        cancel={this.cancel}\r\n                        errors={errors.errors}\r\n                        submit={this.submit}\r\n                        submitButtonText=\"Sign Up\"\r\n                        elements={() => (\r\n                                <React.Fragment>\r\n                                    <input \r\n                                        id=\"firstName\" \r\n                                        name=\"firstName\" \r\n                                        type=\"text\" \r\n                                        className=\"\" \r\n                                        placeholder=\"First Name\" \r\n                                        value={firstName}\r\n                                        onChange={this.change}\r\n                                        />\r\n                                    <input \r\n                                        id=\"lastName\" \r\n                                        name=\"lastName\" \r\n                                        type=\"text\" \r\n                                        className=\"\" \r\n                                        placeholder=\"Last Name\" \r\n                                        value={lastName}\r\n                                        onChange={this.change}\r\n                                        />\r\n                                    <input \r\n                                        id=\"emailAddress\" \r\n                                        name=\"emailAddress\" \r\n                                        type=\"text\" \r\n                                        className=\"\" \r\n                                        placeholder=\"Email Address\" \r\n                                        value={emailAddress} \r\n                                        onChange={this.change}\r\n                                        />\r\n                                    <input \r\n                                        id=\"password\" \r\n                                        name=\"password\" \r\n                                        type=\"password\" \r\n                                        className=\"\" \r\n                                        placeholder=\"Password\" \r\n                                        value={password}\r\n                                        onChange={this.change}\r\n                                        />\r\n                                    <input \r\n                                        id=\"confirmPassword\" \r\n                                        name=\"confirmPassword\" \r\n                                        type=\"password\" \r\n                                        className=\"\" \r\n                                        placeholder=\"Confirm Password\" \r\n                                        value={confirmPassword}\r\n                                        onChange={this.change}\r\n                                        />\r\n                            </React.Fragment>\r\n                        )}\r\n                    />\r\n                    <p>&nbsp;</p>\r\n                    <p>Already have a user account? <Link to=\"/signin\">Click here</Link> to sign in!</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","// import React from 'react';\r\n\r\nconst UserSignOut = (props) => {\r\n    const { context } = props;\r\n    context.actions.signOut();\r\n\r\n    props.history.push('/');\r\n    return null;\r\n}\r\n\r\nexport default UserSignOut;","import React, { Component } from 'react';\r\nimport Form from './Form';\r\n\r\nclass CreateCourse extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            title: '',\r\n            description: '',\r\n            estimatedTime: '',\r\n            materialsNeeded: '',\r\n            errors: null\r\n        }\r\n        this.change = this.change.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n\r\n    change(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    submit(event) {\r\n        const { context } = this.props;\r\n        const authUser = JSON.parse(context.authenticatedUser);\r\n        const emailAddress = authUser.user.user.emailAddress;\r\n        const password = authUser.password;\r\n        \r\n        const {\r\n            title,\r\n            description,\r\n            estimatedTime,\r\n            materialsNeeded\r\n        } = this.state;\r\n\r\n        const newCourse = {\r\n            title,\r\n            description,\r\n            estimatedTime,\r\n            materialsNeeded\r\n        }\r\n\r\n        context.data.createCourse(emailAddress, password, newCourse)\r\n            .then(errors => {\r\n                if (errors.errors) {\r\n                    console.error(errors.errors);\r\n                    this.setState({\r\n                        errors: errors.errors\r\n                    });\r\n                } else {\r\n                    this.props.history.push('/');\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n                this.props.history.push('/error');\r\n            });\r\n    }\r\n    \r\n    cancel = () => {\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            title,\r\n            description,\r\n            estimatedTime,\r\n            materialsNeeded,\r\n            errors\r\n        } = this.state;\r\n        const { context } = this.props;\r\n        const authUser = JSON.parse(context.authenticatedUser);\r\n\r\n        return (\r\n        <div className=\"bounds course--detail\">\r\n            <h1>Create Course</h1>\r\n            <Form\r\n                cancel={this.cancel}\r\n                errors={errors}\r\n                submit={this.submit}\r\n                submitButtonText=\"Create Course\"\r\n                elements={() => (\r\n                    <React.Fragment>\r\n                        <div className=\"grid-66\">\r\n                            <div className=\"course--header\">\r\n                                <h4 className=\"course--label\">Course</h4>\r\n                                <div>\r\n                                    <input \r\n                                        id=\"title\" \r\n                                        name=\"title\" \r\n                                        type=\"text\" \r\n                                        className=\"input-title course--title--input\" \r\n                                        placeholder=\"Course title...\"\r\n                                        onChange={this.change}\r\n                                        value={title}\r\n                                            />\r\n                                </div>\r\n                                <p>By: {authUser.user.user.firstName} {authUser.user.user.lastName}</p>\r\n                            </div>\r\n                            <div className=\"course--description\">\r\n                                <div>\r\n                                    <textarea \r\n                                        id=\"description\" \r\n                                        name=\"description\" \r\n                                        className=\"\" \r\n                                        placeholder=\"Course description...\"\r\n                                        onChange={this.change}\r\n                                        value={description}\r\n                                            />\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                            <div className=\"grid-25 grid-right\">\r\n                            <div className=\"course--stats\">\r\n                                <ul className=\"course--stats--list\">\r\n                                <li className=\"course--stats--list--item\">\r\n                                    <h4>Estimated Time</h4>\r\n                                    <div>\r\n                                        <input \r\n                                            id=\"estimatedTime\"\r\n                                            name=\"estimatedTime\"\r\n                                            type=\"text\"\r\n                                            className=\"course--time--input\"\r\n                                            placeholder=\"Hours\"\r\n                                            onChange={this.change}\r\n                                            value={estimatedTime}\r\n                                                />\r\n                                    </div>\r\n                                </li>\r\n                                <li className=\"course--stats--list--item\">\r\n                                    <h4>Materials Needed</h4>\r\n                                    <div>\r\n                                        <textarea \r\n                                            id=\"materialsNeeded\"\r\n                                            name=\"materialsNeeded\"\r\n                                            className=\"\" \r\n                                            placeholder=\"List materials...\" \r\n                                            onChange={this.change}\r\n                                            value={materialsNeeded}\r\n                                                />\r\n                                    </div>\r\n                                </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </React.Fragment>\r\n                )}\r\n            />    \r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateCourse;","import React, { Component } from 'react';\r\nimport config from '../config';\r\nimport Form from './Form';\r\nimport { Redirect } from 'react-router-dom';\r\nimport loading from '../img/loading.gif';\r\n\r\nclass UpdateCourse extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            title: '',\r\n            description: '',\r\n            estimatedTime: '',\r\n            materialsNeeded: '',\r\n            isLoading: true,\r\n            errors: null\r\n        }\r\n        this.change = this.change.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${config.apiBaseUrl}/courses/${this.props.match.params.id}`)\r\n            .then(res => res.json())\r\n            .then(res => this.setState(prevState => {\r\n                if (res.course) {\r\n                    return {\r\n                        title: res.course.title,\r\n                        description: res.course.description,\r\n                        estimatedTime: res.course.estimatedTime,\r\n                        materialsNeeded: res.course.materialsNeeded,\r\n                        id: res.course.user.id,\r\n                        isLoading: false\r\n                    }\r\n                } else {\r\n                    console.error(res.errors.errors.message);\r\n                    return this.props.history.push('/notfound');\r\n                }\r\n            }));\r\n    }\r\n\r\n    change(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n    \r\n    submit(event) {\r\n        const { context } = this.props;\r\n        const authUser = JSON.parse(context.authenticatedUser);\r\n        const emailAddress = authUser.user.user.emailAddress;\r\n        const password = authUser.password;\r\n        const courseId = this.props.match.params.id;\r\n        \r\n        const {\r\n            title,\r\n            description,\r\n            estimatedTime,\r\n            materialsNeeded\r\n        } = this.state;\r\n\r\n        const updatedCourse = {\r\n            title,\r\n            description,\r\n            estimatedTime,\r\n            materialsNeeded\r\n        }\r\n\r\n        context.data.updateCourse(emailAddress, password, updatedCourse, courseId)\r\n            .then(errors => {\r\n                if (errors.errors) {\r\n                    console.error(errors.errors);\r\n                    this.setState({\r\n                        errors: errors.errors\r\n                    });\r\n                } else {\r\n                    this.props.history.push(`/courses/${courseId}`);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n                this.props.history.push('/error');\r\n            });\r\n    }\r\n\r\n    cancel = () => {\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        let renderedData;\r\n        const {\r\n            title,\r\n            description,\r\n            estimatedTime,\r\n            materialsNeeded,\r\n            errors\r\n        } = this.state;\r\n        const { context } = this.props;\r\n        const authUser = JSON.parse(context.authenticatedUser);\r\n\r\n        if (!this.state.isLoading) {\r\n            renderedData = (\r\n                <div className=\"bounds course--detail\">\r\n                    <h1>Update Course</h1>\r\n                    <div>\r\n                        <Form\r\n                            cancel={this.cancel}\r\n                            errors={errors}\r\n                            submit={this.submit}\r\n                            submitButtonText=\"Update Course\" \r\n                            elements={() => (\r\n                                <React.Fragment>\r\n                                    <div className=\"grid-66\">\r\n                                        <div className=\"course--header\">\r\n                                            <h4 className=\"course--label\">Course</h4>\r\n                                            <div>\r\n                                                <input \r\n                                                    id=\"title\" \r\n                                                    name=\"title\" \r\n                                                    type=\"text\" \r\n                                                    className=\"input-title course--title--input\" \r\n                                                    onChange={this.change}\r\n                                                    value={title}\r\n                                                        />\r\n                                                </div>\r\n                                            <p>By: {authUser.user.user.firstName} {authUser.user.user.lastName}</p>\r\n                                        </div>\r\n                                        <div className=\"course--description\">\r\n                                            <div>\r\n                                                <textarea \r\n                                                    id=\"description\"\r\n                                                    name=\"description\"\r\n                                                    className=\"\" \r\n                                                    onChange={this.change}\r\n                                                    value={description}\r\n                                                        />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"grid-25 grid-right\">\r\n                                        <div className=\"course--stats\">\r\n                                            <ul className=\"course--stats--list\">\r\n                                                <li className=\"course--stats--list--item\">\r\n                                                    <h4>Estimated Time</h4>\r\n                                                    <div>\r\n                                                        <input \r\n                                                            id=\"estimatedTime\" \r\n                                                            name=\"estimatedTime\" \r\n                                                            type=\"text\" \r\n                                                            className=\"course--time--input\"\r\n                                                            onChange={this.change}\r\n                                                            value={estimatedTime}  \r\n                                                                />\r\n                                                    </div>\r\n                                                </li>\r\n                                                <li className=\"course--stats--list--item\">\r\n                                                    <h4>Materials Needed</h4>\r\n                                                    <div>\r\n                                                        <textarea \r\n                                                            id=\"materialsNeeded\" \r\n                                                            name=\"materialsNeeded\" \r\n                                                            className=\"\"\r\n                                                            onChange={this.change} \r\n                                                            value={materialsNeeded}\r\n                                                                />\r\n                                                    </div>\r\n                                                </li>\r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n                                </React.Fragment>\r\n                            )}/>\r\n                    </div>\r\n                </div>\r\n            )\r\n\r\n            if (authUser && authUser.user.user.id === this.state.id) {\r\n                return (\r\n                    <div>\r\n                        {renderedData}\r\n                    </div>\r\n                )\r\n            } else {\r\n                return <Redirect to='/forbidden' />\r\n            }\r\n        } else {\r\n            renderedData = <img src={loading} className=\"centered\" alt=\"Loading\" />\r\n\r\n            return (\r\n                <div>\r\n                    {renderedData}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default UpdateCourse;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default () => {\r\n    return (\r\n        <div className=\"bounds\">\r\n            <h1>Not Found</h1>\r\n            <p>\r\n                Sorry! We couldn't find the page you're looking for. <br/>\r\n                <Link to=\"/\">Click Here</Link> to return to the home page.\r\n            </p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default () => {\r\n    return (\r\n        <div className=\"bounds\">\r\n            <h1>Error</h1>\r\n            <p>\r\n                Sorry! We just encountered an unexpected error. <br/>\r\n                <Link to=\"/\">Click Here</Link> to return to the home page.\r\n            </p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default () => {\r\n    return (\r\n        <div className=\"bounds\">\r\n            <h1>Forbidden</h1>\r\n            <p>\r\n                Oh oh! You can't access this page. <br/>\r\n                <Link to=\"/\">Click Here</Link> to return to the home page.\r\n            </p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport config from './config';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n// Used to POST, PUT, or DELETE any data\r\nexport default class Data {\r\n    // Helper function using Fetch\r\n    api(path, method = 'GET', body = null, requiresAuth = false, credentials = null) {\r\n        const url = config.apiBaseUrl + path;\r\n\r\n        const options = {\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8'\r\n            }\r\n        };\r\n\r\n        if (body !== null) {\r\n            options.body = JSON.stringify(body);\r\n        }\r\n\r\n        if (requiresAuth) {\r\n            const encodedCredentials = btoa(`${credentials.emailAddress}:${credentials.password}`);\r\n\r\n            options.headers['Authorization']  = `Basic ${encodedCredentials}`;\r\n        }\r\n\r\n        return fetch(url, options);\r\n    }\r\n\r\n    async getUser(emailAddress, password) {\r\n        const response = await this.api('/users', 'GET', null, true, { emailAddress, password });\r\n        if (response.status === 200) {\r\n            return response.json().then(data => data);\r\n        } else if (response.status === 401) {\r\n            return null;\r\n        } else if (response.status === 500) {\r\n            return <Redirect to=\"/error\" />\r\n        } else {\r\n            throw new Error();\r\n        }\r\n    }\r\n\r\n    async createUser(user) {\r\n        const response = await this.api('/users', 'POST', user);\r\n        if (response.status === 201) {\r\n            return [];\r\n        } else if (response.status === 400) {\r\n            return response.json().then(data => {\r\n                return data.errors;\r\n            });\r\n        } else if (response.status === 500) {\r\n            return <Redirect to=\"/error\" />\r\n        } else {\r\n            throw new Error();\r\n        }\r\n    }\r\n\r\n    async createCourse(emailAddress, password, course) {\r\n        const response = await this.api('/courses', 'POST', course, true, { emailAddress, password });\r\n\r\n        if (response.status === 201) {\r\n            return [];\r\n        } else if (response.status === 400) {\r\n            return response.json().then(data => {\r\n                return data.errors;\r\n            });\r\n        } else if (response.status === 401) {\r\n            return null;\r\n        } else if (response.status === 500) {\r\n            return <Redirect to=\"/error\" />\r\n        } else {\r\n            throw new Error();\r\n        }\r\n    }\r\n\r\n    async updateCourse(emailAddress, password, course, id) {\r\n        const response = await this.api(`/courses/${id}`, 'PUT', course, true, { emailAddress, password });\r\n\r\n        if (response.status === 204) {\r\n            return [];\r\n        } else if (response.status === 400) {\r\n            return response.json().then(data => {\r\n                return data.errors;\r\n            });\r\n        } else if (response.status === 401) {\r\n            return null;\r\n        } else if (response.status === 500) {\r\n            return <Redirect to=\"/error\" />\r\n        } else {\r\n            throw new Error();\r\n        }\r\n    }\r\n\r\n    async deleteCourse(emailAddress, password, id) {\r\n        const response = await this.api(`/courses/${id}`, 'DELETE', null, true, { emailAddress, password });\r\n\r\n        if (response.status === 204) {\r\n            return [];\r\n        } else if (response.status === 500) {\r\n            return <Redirect to=\"/error\" />\r\n        } else {\r\n            throw new Error();\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Data from './Data';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst Context = React.createContext(); \r\n\r\n// Creates provider for context\r\nexport class Provider extends Component {\r\n    constructor() {\r\n        super();\r\n        this.data = new Data();\r\n        this.state = {\r\n            authenticatedUser: Cookies.get('authenticatedUser') || null\r\n        }\r\n    }\r\n\r\n    // Signs in user\r\n    signIn = async (emailAddress, password) => {\r\n        const user = await this.data.getUser(emailAddress, password);\r\n\r\n        if (user !== null) {\r\n            this.setState(() => {\r\n                return {\r\n                    authenticatedUser: JSON.stringify({user, password})\r\n                }\r\n            });\r\n            Cookies.set('authenticatedUser', JSON.stringify({user, password}), { expires: 1 })\r\n        }\r\n        return user;\r\n    }\r\n\r\n    // Signs out user\r\n    signOut = () => {\r\n        this.setState({ authenticatedUser: null });\r\n\r\n        Cookies.remove('authenticatedUser');\r\n    }\r\n\r\n    render() {\r\n        const { authenticatedUser } = this.state;\r\n\r\n        const value = {\r\n            authenticatedUser,\r\n            data: this.data,\r\n            actions: {\r\n                signIn: this.signIn,\r\n                signOut: this.signOut\r\n            }\r\n        };\r\n        \r\n        return (\r\n            <Context.Provider value={value}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n    \r\n    \r\n}\r\n\r\n// Creates consumer\r\nexport const Consumer = Context.Consumer;\r\n\r\nexport default function withContext(Component) {\r\n    return function ContextComponent(props) {\r\n        return (\r\n            <Context.Consumer>\r\n                {context => <Component {...props} context={context} />}\r\n            </Context.Consumer>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { Consumer } from './Context';\r\n\r\n// Creates components for protected route\r\nexport default ({ component: Component, ...rest }) => {\r\n    return (\r\n        <Consumer>\r\n            { context => (\r\n                <Route\r\n                    {...rest}\r\n                    render={props => context.authenticatedUser ? (\r\n                        <Component {...props} />\r\n                    ) : (\r\n                        <Redirect to={{\r\n                            pathname: '/signin',\r\n                            state: { from: props.location }\r\n                        }}/>\r\n                    )}\r\n                />\r\n            )}\r\n        </Consumer>\r\n    );\r\n};","import React from 'react';\nimport { \n  BrowserRouter as Router, \n  Route,\n  Switch\n} from 'react-router-dom';\n// Style imports\nimport './styles/global.css';\n\n// Component imports\nimport Header from './components/Header';\nimport Courses from './components/Courses';\nimport CourseDetail from './components/CourseDetail';\nimport UserSignIn from './components/UserSignIn';\nimport UserSignUp from './components/UserSignUp';\nimport UserSignOut from './components/UserSignOut';\nimport CreateCourse from './components/CreateCourse';\nimport UpdateCourse from './components/UpdateCourse';\nimport NotFound from './components/NotFound';\nimport Error from './components/Error';\nimport Forbidden from './components/Forbidden';\nimport PrivateRoute from './PrivateRoute';\n\n// Context import\nimport withContext from './Context';\n\n// Components with Context\nconst HeaderWithContext = withContext(Header);\nconst UserSignInWithContext = withContext(UserSignIn);\nconst UserSignUpWithContext = withContext(UserSignUp);\nconst UserSignOutWithContext = withContext(UserSignOut);\nconst CourseDetailWithContext = withContext(CourseDetail);\nconst CreateCourseWithContext = withContext(CreateCourse);\nconst UpdateCourseWithContext = withContext(UpdateCourse);\n\n\nexport default () => (\n      <Router>\n        <HeaderWithContext />\n        <hr />\n\n        <Switch>\n          <Route exact path=\"/\" component={Courses} />\n          <PrivateRoute path=\"/courses/create\" component={CreateCourseWithContext} />\n          <PrivateRoute path=\"/courses/:id/update\" component={UpdateCourseWithContext} />\n          <Route path=\"/courses/:id\" component={CourseDetailWithContext} />\n          <Route path=\"/signin\" component={UserSignInWithContext} />\n          <Route path=\"/signup\" component={UserSignUpWithContext} />\n          <Route path=\"/signout\" component={UserSignOutWithContext} />\n          <Route path=\"/forbidden\" component={Forbidden} />\n          <Route path=\"/error\" component={Error} />\n          <Route component={NotFound} />\n        </Switch>\n      </Router>\n);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from './Context';\n\nReactDOM.render(\n<Provider>\n    <App />\n</Provider>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}